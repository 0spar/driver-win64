<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="WLH checked|Win32">
      <Configuration>WLH checked</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLH checked|x64">
      <Configuration>WLH checked</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLH free|Win32">
      <Configuration>WLH free</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLH free|x64">
      <Configuration>WLH free</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLH2K checked|Win32">
      <Configuration>WLH2K checked</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLH2K checked|x64">
      <Configuration>WLH2K checked</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLH2K free|Win32">
      <Configuration>WLH2K free</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLH2K free|x64">
      <Configuration>WLH2K free</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLHNET checked|Win32">
      <Configuration>WLHNET checked</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLHNET checked|x64">
      <Configuration>WLHNET checked</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLHNET free|Win32">
      <Configuration>WLHNET free</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLHNET free|x64">
      <Configuration>WLHNET free</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLHXP checked|Win32">
      <Configuration>WLHXP checked</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLHXP checked|x64">
      <Configuration>WLHXP checked</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLHXP free|Win32">
      <Configuration>WLHXP free</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="WLHXP free|x64">
      <Configuration>WLHXP free</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{9B975EC1-255D-466D-A04D-399C44C8144E}</ProjectGuid>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'" Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="CORE_Driver.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'">$(SolutionDir)$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'">.\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'">$(SolutionDir)\ddkbuild.cmd -WLH free .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'">$(SolutionDir)\ddkbuild.cmd -WLH free . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'">DBG=0;WINVER=0x0600;NTDDI_VERSION=0x06000000;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLH free|Win32'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'">$(SolutionDir)$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'">.\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'">$(SolutionDir)\ddkbuild.cmd -WLH checked .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'">$(SolutionDir)\ddkbuild.cmd -WLH checked . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'">DBG=1;WINVER=0x0600;NTDDI_VERSION=0x06000000;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLH checked|Win32'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'">.\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'">$(DDKBUILD_PATH) -WLH2K free .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'">$(DDKBUILD_PATH) -WLH2K free . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'">DBG=0;WINVER=0x0500;NTDDI_VERSION=0x05000400;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLH2K free|Win32'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'">.\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'">$(DDKBUILD_PATH) -WLH2K checked .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'">$(DDKBUILD_PATH) -WLH2K checked . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'">DBG=1;WINVER=0x0500;NTDDI_VERSION=0x05000400;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|Win32'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'">.\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'">$(SolutionDir)\ddkbuild.cmd -WLHXP free .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'">$(SolutionDir)\ddkbuild.cmd -WLHXP free . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'">DBG=0;WINVER=0x0501;NTDDI_VERSION=0x05010200;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLHXP free|Win32'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'">.\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'">$(SolutionDir)\ddkbuild.cmd -WLHXP checked .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'">$(SolutionDir)\ddkbuild.cmd -WLHXP checked . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'">DBG=1;WINVER=0x0501;NTDDI_VERSION=0x05010200;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|Win32'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'">.\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'">$(DDKBUILD_PATH) -WLHNET free .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'">$(DDKBUILD_PATH) -WLHNET free . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'">DBG=0;WINVER=0x0502;NTDDI_VERSION=0x05020100;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLHNET free|Win32'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'">.\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'">$(DDKBUILD_PATH) -WLHNET checked .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'">$(DDKBUILD_PATH) -WLHNET checked . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'">DBG=1;WINVER=0x0502;NTDDI_VERSION=0x05020100;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|Win32'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'">$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'">$(Platform)\$(Configuration)\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'">$(SolutionDir)\ddkbuild.cmd -W7X64 free .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'">$(SolutionDir)\ddkbuild.cmd -W7X64 free . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'">DBG=0;WINVER=0x0600;NTDDI_VERSION=0x06000000;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLH free|x64'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'">$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'">$(Platform)\$(Configuration)\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'">$(SolutionDir)\ddkbuild.cmd -WLH checked .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'">$(SolutionDir)\ddkbuild.cmd -WLH checked . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'">DBG=1;WINVER=0x0600;NTDDI_VERSION=0x06000000;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLH checked|x64'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'">$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'">$(Platform)\$(Configuration)\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'">$(DDKBUILD_PATH) -WLH2K free .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'">$(DDKBUILD_PATH) -WLH2K free . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'">DBG=0;WINVER=0x0500;NTDDI_VERSION=0x05000400;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLH2K free|x64'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'">$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'">$(Platform)\$(Configuration)\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'">$(DDKBUILD_PATH) -WLH2K checked .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'">$(DDKBUILD_PATH) -WLH2K checked . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'">DBG=1;WINVER=0x0500;NTDDI_VERSION=0x05000400;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLH2K checked|x64'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'">$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'">$(Platform)\$(Configuration)\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'">$(SolutionDir)\ddkbuild.cmd -WLHXP free .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'">$(SolutionDir)\ddkbuild.cmd -WLHXP free . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'">DBG=0;WINVER=0x0501;NTDDI_VERSION=0x05010200;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLHXP free|x64'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'">$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'">$(Platform)\$(Configuration)\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'">$(SolutionDir)\ddkbuild.cmd -WLHXP checked .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'">$(SolutionDir)\ddkbuild.cmd -WLHXP checked . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'">DBG=1;WINVER=0x0501;NTDDI_VERSION=0x05010200;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLHXP checked|x64'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'">$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'">$(Platform)\$(Configuration)\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'">$(DDKBUILD_PATH) -WLHNET free .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'">$(DDKBUILD_PATH) -WLHNET free . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'">DBG=0;WINVER=0x0502;NTDDI_VERSION=0x05020100;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLHNET free|x64'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'">$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'">$(Platform)\$(Configuration)\</IntDir>
    <NMakeBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'">$(DDKBUILD_PATH) -WLHNET checked .</NMakeBuildCommandLine>
    <NMakeReBuildCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'">$(DDKBUILD_PATH) -WLHNET checked . -cZ</NMakeReBuildCommandLine>
    <NMakeCleanCommandLine Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'" />
    <NMakeOutput Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'" />
    <NMakePreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'">DBG=1;WINVER=0x0502;NTDDI_VERSION=0x05020100;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'">$(WLHBASE)\inc\ddk\;$(NMakeIncludeSearchPath)</NMakeIncludeSearchPath>
    <NMakeForcedIncludes Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'">$(NMakeForcedIncludes)</NMakeForcedIncludes>
    <NMakeAssemblySearchPath Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'">$(NMakeAssemblySearchPath)</NMakeAssemblySearchPath>
    <NMakeForcedUsingAssemblies Condition="'$(Configuration)|$(Platform)'=='WLHNET checked|x64'">$(NMakeForcedUsingAssemblies)</NMakeForcedUsingAssemblies>
  </PropertyGroup>
  <ItemDefinitionGroup>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="deepfreeze.c" />
    <ClCompile Include="hiding.c" />
    <ClCompile Include="main.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="deepfreeze.h" />
    <ClInclude Include="driver.h" />
    <ClInclude Include="enumproc.h" />
    <ClInclude Include="hiding.h" />
    <ClInclude Include="main.h" />
    <ClInclude Include="resource.h" />
    <ClInclude Include="sector.h" />
    <ClInclude Include="VERSION.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="drvversion.rc" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\ddkbuild.cmd" />
    <None Include="makefile" />
    <None Include="sources" />
    <None Include="CHANGELOG.txt" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>